name: 'build'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  release:
    types:
      - published
  push:
    branches:
      - main
  pull_request:
    types: [ opened, reopened, synchronize, labeled ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: install apt dependencies
        run: |
          sudo apt update
          sudo apt install -y zlib1g-dev gfortran libopenblas-dev liblapacke-dev catch2 libeigen3-dev

      - name: Run Clippy
        env:
          RUSTFLAGS: "-Dwarnings"
        run: |
          rustup component add clippy
          cargo clippy --all-targets --all-features

  test-cpp-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: install apt dependencies
        run: |
          sudo apt update
          sudo apt install -y zlib1g-dev gfortran libopenblas-dev liblapacke-dev catch2 libeigen3-dev

      - name: build
        shell: bash -el {0}
        run: |
          cd cpp
          cmake -S . -B build  -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
          cmake --build build --config Release --target sasktran2_tests -j 2

      - name: test
        shell: bash -el {0}
        run: |
          cd cpp/build/lib
          ctest --verbose

  test-rust-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: install apt dependencies
        run: |
          sudo apt update
          sudo apt install -y zlib1g-dev gfortran libopenblas-dev liblapacke-dev catch2 libeigen3-dev

      - name: test
        shell: bash -el {0}
        run: |
          cargo test

  test-rust-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: run openblas helper
        shell: bash -el {0}
        run: |
          sh ci/cibw/cibw_before_build.sh
        env:
          RUNNER_OS: Windows

      - name: test
        shell: bash -el {0}
        env:
          PKG_CONFIG_PATH: C:/opt/64/lib/pkgconfig
          CMAKE_PREFIX_PATH: C:/opt/64/
          SKTRAN_BLAS_VENDOR: SCIPY_OPENBLAS
        run: |
          cargo build --release

  test-rust-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: test
        shell: bash -el {0}
        env:
          SKTRAN_BLAS_VENDOR: Apple
          USE_OMP: OFF
        run: |
          cargo test -p sasktran2-rs

  test-cpp-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true
      - name: install vcpkg dependencies
        shell: bash -el {0}
        run: |
          vcpkg install catch2

      - name: run openblas helper
        shell: bash -el {0}
        run: |
          sh ci/cibw/cibw_before_build.sh
        env:
          RUNNER_OS: Windows

      - name: build
        shell: bash -el {0}
        env:
          PKG_CONFIG_PATH: C:/opt/64/lib/pkgconfig
          CMAKE_PREFIX_PATH: C:/opt/64/
        run: |
          cd cpp
          cmake -S . -B build  -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          cmake --build build --config Release --target sasktran2_tests -j 2

  test-pixi:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-13
          - os: macos-14

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: setup pixi
        uses: prefix-dev/setup-pixi@v0.9.0

      - name: compile sasktran2
        env:
          SKTRAN_BLAS_VENDOR: OpenBLAS
          USE_OMP: ON
        run: |
          pixi r build

      - name: run tests
        run: |
          pixi r test

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: set up symlink
        run: |
          cd rust/sasktran2-sys && ln -s ../../cpp vendor
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  test-build-sdist:
    runs-on: ubuntu-latest
    needs: build-sdist
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: install apt dependencies
        run: |
          sudo apt update
          sudo apt install -y libopenblas-dev

      - name: download sdist
        uses: actions/download-artifact@v5
        with:
          name: wheels-sdist
          path: dist

      - name: install sdist
        run: |
          pip install --force-reinstall --verbose dist/sasktran2-*

  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-24.04
            target: x86_64
          - runner: ubuntu-24.04-arm
            target: aarch64
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
          docker-options: >
            -e USE_OMP=ON
            -e SKTRAN_BLAS_VENDOR=SCIPY_OPENBLAS
            -e RUNNER_OS=Linux

      - name: test wheel import
        run: |
          pip install --force-reinstall --verbose dist/sasktran2-*.whl pytest
          python -c 'import sasktran2'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist


  linux-test-wheels:
    runs-on: ubuntu-24.04
    needs: linux
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.13"]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: download wheels
        uses: actions/download-artifact@v5
        with:
          name: wheels-linux-x86_64
          path: dist

      - name: install wheels
        run: |
          pip install --force-reinstall --verbose dist/sasktran2-*.whl pytest

      - name: run pytest
        run: |
          pytest .

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Set MACOSX_DEPLOYMENT_TARGET for macos-13
        if: matrix.platform.runner == 'macos-13'
        run: echo "MACOSX_DEPLOYMENT_TARGET=13.0" >> $GITHUB_ENV

      - name: install omp
        run: |
          brew install libomp
          echo "OpenMP_ROOT=$(brew --prefix)/opt/libomp" >> $GITHUB_ENV

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
        env:
          USE_OMP: ON
          SKTRAN_BLAS_VENDOR: SCIPY_OPENBLAS
          RUNNER_OS: MacOS

      - name: Get OpenBLAS lib dir and set env var
        id: get-lib-dir
        run: |
          python -m pip install scipy_openblas64
          echo "LIB_DIR=$(python -c 'import scipy_openblas64; print(scipy_openblas64.get_lib_dir())')" >> $GITHUB_ENV
        shell: bash

      - name: Export OpenBLAS lib path (Unix)
        run: |
          echo "DYLD_LIBRARY_PATH=$LIB_DIR:\$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
        shell: bash

      - name: delocate wheels
        run: |
          pip install delocate
          delocate-wheel dist/*.whl
          delocate-listdeps dist/*.whl

      - name: test wheel import
        run: |
          pip install --force-reinstall --verbose dist/*.whl
          python -c 'import sasktran2'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Before Script
        run: |
          sh ci/cibw/cibw_before_build.sh
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
        env:
          USE_OMP: ON
          SKTRAN_BLAS_VENDOR: SCIPY_OPENBLAS
          RUNNER_OS: Windows
          PKG_CONFIG_PATH: C:/opt/64/lib/pkgconfig
          CMAKE_PREFIX_PATH: C:/opt/64/

      - name: Get OpenBLAS lib dir and set env var
        run: |
          python -m pip install scipy_openblas64
          echo "LIB_DIR=$(python -c 'import scipy_openblas64; print(scipy_openblas64.get_lib_dir())')" >> $GITHUB_ENV
        shell: bash

      - name: Export OpenBLAS lib path (Windows)
        run: |
          echo "PATH=$env:LIB_DIR;$env:PATH" >> $env:GITHUB_ENV
        shell: pwsh

      - name: delve wheels
        shell: bash -el {0}
        run: |
          pip install delvewheel
          delvewheel repair dist/*.whl
          rm -rf dist/*.whl
          mv wheelhouse/*.whl dist/

      - name: test wheel import
        shell: bash -el {0}
        run: |
          pip install --force-reinstall --verbose dist/*.whl
          python -c 'import sasktran2'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  windows-test-wheels:
    runs-on: windows-latest
    needs: windows
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: download wheels
        uses: actions/download-artifact@v5
        with:
          name: wheels-windows-x64
          path: dist

      - name: install wheels
        shell: bash -el {0}
        run: |
          pip install --force-reinstall --verbose dist/sasktran2-*.whl pytest

      - name: run pytest
        run: |
          pytest .

  upload_wheels:
    runs-on: ubuntu-latest
    needs: [windows, macos, linux, build-sdist]
    environment:
      name: pypi
      url: https://pypi.org/p/sasktran2
    permissions:
      id-token: write
    if: (github.event_name == 'release')
    steps:
      - uses: actions/download-artifact@v5
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          verbose: true
