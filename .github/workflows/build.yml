name: 'build'

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, reopened, synchronize, labeled ]
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build-conda-pysasktran2:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target_plat: x86_64
          - os: windows-latest
            target_plat: x86_64
          - os: macos-11
            target_plat: x86_64
          - os: macos-11
            target_plat: arm

    env:
      CMAKE_ARGS_EXTRA: "-DSKTRAN_BLAS_VENDOR=Generic"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Conda build environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: conda_build
          environment-file: ci/conda-envs/build.yml
          channels: conda-forge
          auto-activate-base: false

      - name: Build Conda package
        shell: bash -el {0}
        run: |
          conda-build -c conda-forge python/conda.recipe --output-folder pkgs/

      - name: Build Conda package (cross mac arm)
        shell: bash -el {0}
        if: (matrix.target_plat == 'arm') && (matrix.os == 'macos-11')
        run: |
          conda-build -c conda-forge python/conda.recipe -m conda.recipe/osx_arm64_.yaml --output-folder pkgs/

      - name: Save conda package
        uses: actions/upload-artifact@v3
        with:
          name: sasktran2-conda-${{ matrix.os }}-${{ matrix.target_plat }}
          path: pkgs

  build-wheels-manylinux2014:
    runs-on: ubuntu-latest
    container: ghcr.io/usask-arg/sasktran-manylinux2014-build-container:main

    permissions:
      packages: read

    env:
      CMAKE_ARGS: "-DFORCE_BOOST_STATIC=ON"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Build libsasktran2
        run: |
          cmake ${CMAKE_ARGS} -H. -Bbuild -DFORCE_BOOST_STATIC=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DSKTRAN_BLAS_VENDOR=OpenBLAS
          cmake --build build --config Release --target install

      - name: Build wheels
        run: |
          cd python
          /opt/python/cp37-cp37m/bin/python -m pip wheel . --wheel-dir ../wheelhouse
          /opt/python/cp38-cp38/bin/python -m pip wheel . --wheel-dir ../wheelhouse
          /opt/python/cp39-cp39/bin/python -m pip wheel . --wheel-dir ../wheelhouse
          /opt/python/cp310-cp310/bin/python -m pip wheel . --wheel-dir ../wheelhouse
          /opt/python/cp311-cp311/bin/python -m pip wheel . --wheel-dir ../wheelhouse
      - run: |
          cd wheelhouse
          find . -name "*.whl" -type f -exec auditwheel show '{}' \;
          find . -name "*.whl" -type f -exec auditwheel repair '{}' \; -exec rm '{}' \;
          cd ..
          ls wheelhouse/

      - name: Save wheel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels-linux
          path: wheelhouse

  build-wheels-mac-windows:
    strategy:
      fail-fast: false
      matrix:
        py_version: [py38]
        os: [windows-latest, macos-11]
        target_plat: [x86_64]
        include:
          - os: macos-11
            target_plat: arm

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Get 10.9 SDK
        if: (matrix.os == 'macos-11') && (matrix.target_plat == 'x86_64')
        run: |
          curl -L -O https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.9.sdk.tar.xz
          mkdir -p /tmp
          tar -xf MacOSX10.9.sdk.tar.xz -C /tmp

      - name: Setup Conda build environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: build_${{ matrix.py_version }}
          environment-file: ci/conda-envs/${{ matrix.os }}-${{ matrix.target_plat }}-build-${{ matrix.py_version }}.yml
          channels: conda-forge
          auto-activate-base: false

      - name: build wheel
        if: (matrix.target_plat == 'x86_64')
        env:
          CONDA_BUILD_SYSROOT: "/tmp/MacOSX10.9.sdk"
          SDKROOT: "/tmp/MacOSX10.9.sdk"
          MACOSX_DEPLOYMENT_TARGET: "10.9"
        shell: bash -el {0}
        run: |
          cd python
          python  -m pip wheel . --wheel-dir ../wheelhouse

      - name: build wheel
        if: (matrix.target_plat == 'arm')
        shell: bash -el {0}
        run: |
          cd python
          python  -m pip wheel . --wheel-dir ../wheelhouse

      - name: Save wheel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.target_plat }}-${{ matrix.py_version }}
          path: wheelhouse

  test-wheels:
    needs: [build-wheels-mac-windows, build-wheels-manylinux2014]
    strategy:
      fail-fast: false
      matrix:
        py_version: [ py38 ]
        os: [ windows-latest, macos-11, ubuntu-latest ]
        target_plat: [ x86_64 ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ matrix.py_version }}
          environment-file: ci/${{ matrix.os }}-${{ matrix.target_plat }}-test-${{ matrix.py_version }}.yml
          auto-activate-base: false

      - name: Download wheel artifacts
        if: (matrix.os == 'macos-11') || (matrix.os == 'windows-latest')
        uses: actions/download-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.target_plat }}-${{ matrix.py_version }}
          path: wheelhouse

      - name: Download wheel artifacts
        if: (matrix.os == 'ubuntu-latest')
        uses: actions/download-artifact@v3
        with:
          name: wheels-linux
          path: wheelhouse

      - name: Test wheel
        shell: bash -el {0}
        run: |
          ls wheelhouse
          pip install sasktran2 --no-index -f wheelhouse/
          py.test sasktran
