name: 'test'

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, reopened, synchronize, labeled ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  test-cpp-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: install apt dependencies
        run: |
          sudo apt update
          sudo apt install -y zlib1g-dev

      - name: Setup mamba build environment
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: conda/dev_env.yml

      - name: build
        shell: bash -el {0}
        run: |
          cmake -S . -B build  -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
          cmake --build build --config Release --target sasktran2_tests -j 2

      - name: test
        shell: bash -el {0}
        run: |
          cd build/lib
          ctest --verbose

  test-rust-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: test
        shell: bash -el {0}
        run: |
          cargo test

  test-dev-env-windows:
    runs-on: windows-2019

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup mamba build environment
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: conda/dev_env_windows.yml

      - name: cmake configure debug
        shell: bash -el {0}
        run: |
          cmake -S. -B build -DCMAKE_BUILD_TYPE=Release --debug-find

      - name: build
        shell: bash -el {0}
        run: |
          pip install -e . -v

      - name: printenv
        shell: bash -el {0}
        run: |
          printenv

  test-pixi:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-2019
          - os: macos-13
          - os: macos-14

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: setup pixi
        uses: prefix-dev/setup-pixi@v0.8.3

      - name: compile sasktran2
        env:
          SKTRAN_BLAS_VENDOR: OpenBLAS
          USE_OMP: ON
        run: |
          pixi r build

      - name: run tests
        run: |
          pixi r test


  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-24.04
            target: x86_64
          - runner: ubuntu-24.04-arm
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
          before-script-linux: |
            sh ci/cibw/cibw_before_build.sh
          docker-options: >
            -e USE_OMP=ON
            -e SKTRAN_BLAS_VENDOR=OpenBLAS
            -e RUNNER_OS=Linux
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Before Script
        run: |
          sh ci/cibw/cibw_before_build.sh

      - name: Set MACOSX_DEPLOYMENT_TARGET for macos-13
        if: matrix.platform.runner == 'macos-13'
        run: echo "MACOSX_DEPLOYMENT_TARGET=10.14" >> $GITHUB_ENV
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
        env:
          USE_OMP: ON
          SKTRAN_BLAS_VENDOR: OpenBLAS
          RUNNER_OS: MacOS
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Before Script
        run: |
          sh ci/cibw/cibw_before_build.sh
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
        env:
          USE_OMP: ON
          SKTRAN_BLAS_VENDOR: OpenBLAS
          RUNNER_OS: Windows
          PKG_CONFIG_PATH: C:/opt/64/lib/pkgconfig
          CMAKE_PREFIX_PATH: C:/opt/64/
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  test_wheels_cibuildwheel-accelerate:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-14 ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Set MACOSX_DEPLOYMENT_TARGET for macos-14
        if: matrix.os == 'macos-14'
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=14.0" >> $GITHUB_ENV
          echo "SKTRAN_BLAS_VENDOR=Apple" >> $GITHUB_ENV

      - name: Build wheels single version
        uses: pypa/cibuildwheel@v2.23.1
        env:
          DO_STREAM_TEMPLATES: "ON"
          CIBW_SKIP: "pp* *musllinux* cp37-*"
          CIBW_BUILD: "cp313-*"
          CIBW_ENVIRONMENT_PASS_LINUX: DO_STREAM_TEMPLATES
        with:
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}-accelerate
