name: 'test'

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, reopened, synchronize, labeled ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  test-cpp-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Conda build environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: sasktran2-dev-env
          environment-file: conda/dev_env.yml
          channels: conda-forge
          auto-activate-base: false
          python-version: 3.11

      - name: build
        shell: bash -el {0}
        run: |
          cmake -S . -B build  -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
          cmake --build build --config Release --target sasktran2_tests -j 2
    
      - name: test
        shell: bash -el {0}
        run: |
          cd build/lib
          ctest --verbose

  test-conda-pysasktran2:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target_plat: x86_64
          - os: windows-latest
            target_plat: x86_64
          - os: macos-11
            target_plat: x86_64
          - os: macos-11
            target_plat: arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Conda build environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: conda_build
          environment-file: ci/conda-envs/build.yml
          channels: conda-forge
          auto-activate-base: false

      - name: Set anaconda upload
        shell: bash -el {0}
        run: |
          cp ci/conda_build_config_test.yaml conda.recipe/conda_build_config.yaml
          conda config --set anaconda_upload no

      - name: Build Conda package
        shell: bash -el {0}
        if: (matrix.target_plat == 'x86_64')
        run: |
          conda-build -c conda-forge conda.recipe --output-folder pkgs/

      - name: Build Conda package (cross mac arm)
        shell: bash -el {0}
        if: (matrix.target_plat == 'arm') && (matrix.os == 'macos-11')
        run: |
          conda-build -c conda-forge conda.recipe -m conda.recipe/osx_arm64_.yaml --output-folder pkgs/ --no-test

      - name: Save conda package
        uses: actions/upload-artifact@v3
        with:
          name: sasktran2-conda-${{ matrix.os }}-${{ matrix.target_plat }}
          path: pkgs

  test_wheels_cibuildwheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-11, windows-latest ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Build wheels single version
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_SKIP: "pp* *musllinux* cp37-*"
          CIBW_BUILD: "cp311-*"
        with:
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
