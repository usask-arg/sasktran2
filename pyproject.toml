[build-system]
requires = ["scikit-build-core>=0.3.3", "pybind11", "setuptools-scm>=8.0"]
build-backend = "scikit_build_core.build"


[project]
name = "sasktran2"
dynamic = ["version"]
dependencies = ['numpy', 'appdirs', 'pyyaml', 'xarray>=2023.0.0', 'dask', 'scipy', 'netcdf4']
include = ['python/src/sasktran2/*']
description= "The SASKTRAN radiative transfer model Version 2"
readme = "README.md"
authors = [
    { name = "Daniel Zawada", email = "daniel.zawada@usask.ca" },
]
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

[project.optional-dependencies]
test = ["pytest"]

[tool.scikit-build]
wheel.expand-macos-universal-tags = true
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["src/sasktran2/_version.py"]

[tool.setuptools_scm]
write_to = "src/sasktran2/_version.py"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
    "ignore:(ast.Str|Attribute s|ast.NameConstant|ast.Num) is deprecated:DeprecationWarning:_pytest",  # Python 3.12
]
testpaths = ["tests"]


[tool.cibuildwheel]
test-command = "bash {project}/ci/cibw/cibw_test_script.sh {project}"
test-extras = ["test"]
test-skip = ["*universal2:arm64"]
# Setuptools bug causes collision between pypy and cpython artifacts
# before-build = "rm -rf {project}/build"
before-build = "bash {project}/ci/cibw/cibw_before_build.sh {project}"

[tool.cibuildwheel.linux]
archs = "native"
environment = { CFLAGS="-fno-strict-aliasing -DBLAS_SYMBOL_SUFFIX=64_ -DHAVE_BLAS_ILP64", LDFLAGS="-Wl,--strip-debug", CXXFLAGS="-DBLAS_SYMBOL_SUFFIX=64_ -DHAVE_BLAS_ILP64", RUNNER_OS="Linux", CMAKE_BUILD_PARALLEL_LEVEL="2"}

[tool.cibuildwheel.macos]
archs = "x86_64 arm64"
test-skip = "*_universal2:arm64"
# MACOS linker doesn't support stripping symbols
environment = {CFLAGS="-fno-strict-aliasing -DBLAS_SYMBOL_SUFFIX=64_ -DHAVE_BLAS_ILP64", CXXFLAGS="-DBLAS_SYMBOL_SUFFIX=64_ -DHAVE_BLAS_ILP64",  CC="clang", CXX = "clang++", RUNNER_OS="macOS", CMAKE_ARGS="-DUSE_OPENMP=OFF", CMAKE_BUILD_PARALLEL_LEVEL="3"}

[tool.cibuildwheel.windows]
archs = "native"
environment = {CFLAGS="-DBLAS_SYMBOL_SUFFIX=64_ -DHAVE_BLAS_ILP64", CXXFLAGS="-DBLAS_SYMBOL_SUFFIX=64_ -DHAVE_BLAS_ILP64", LDFLAGS="", PKG_CONFIG_PATH="C:/opt/64/lib/pkgconfig", CMAKE_PREFIX_PATH="C:/opt/64/", CMAKE_BUILD_PARALLEL_LEVEL="2"}
#config-settings = "setup-args=--vsenv"
repair-wheel-command = "bash ./ci/cibw/repair_windows.sh {wheel} {dest_dir}"


[tool.ruff]
select = [
    "E", "F", "W", # flake8
    "B",           # flake8-bugbear
    "I",           # isort
    "ARG",         # flake8-unused-arguments
    "C4",          # flake8-comprehensions
    "EM",          # flake8-errmsg
    "ICN",         # flake8-import-conventions
    "ISC",         # flake8-implicit-str-concat
    "G",           # flake8-logging-format
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "RET",         # flake8-return
    "RUF",         # Ruff-specific
    "SIM",         # flake8-simplify
    "T20",         # flake8-print
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
    "EXE",         # flake8-executable
    "NPY",         # NumPy specific rules
    "PD",          # pandas-vet
]
extend-ignore = [
    "PLR",    # Design related pylint codes
    "E501",   # Line too long
    "I002",  # Future annotations
]
src = ["python"]
unfixable = [
    "T20",  # Removes print statements
    "F841", # Removes unused variables
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20"]