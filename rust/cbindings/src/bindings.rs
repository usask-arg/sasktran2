/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Geometry1D {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn sk_geometry1d_create(
        cos_sza: f64,
        saa: f64,
        earth_radius: f64,
        grid_values: *mut f64,
        ngrid_values: ::std::os::raw::c_int,
        interp_method: ::std::os::raw::c_int,
        geotype: ::std::os::raw::c_int,
    ) -> *mut Geometry1D;
}
unsafe extern "C" {
    pub fn sk_geometry1d_destroy(geometry: *mut Geometry1D);
}
unsafe extern "C" {
    pub fn sk_geometry1d_get_num_altitudes(geometry: *const Geometry1D) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct AtmosphereStorage {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Atmosphere {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Surface {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn sk_atmosphere_storage_create(
        nlocation: ::std::os::raw::c_int,
        nwavel: ::std::os::raw::c_int,
        nphase_moments: ::std::os::raw::c_int,
        nstokes: ::std::os::raw::c_int,
        nderiv: ::std::os::raw::c_int,
        ssa: *mut f64,
        total_extinction: *mut f64,
        emission_source: *mut f64,
        f: *mut f64,
        leg_coeff: *mut f64,
        d_leg_coeff: *mut f64,
        d_f: *mut f64,
        solar_irradiance: *mut f64,
    ) -> *mut AtmosphereStorage;
}
unsafe extern "C" {
    pub fn sk_atmosphere_storage_destroy(storage: *mut AtmosphereStorage);
}
unsafe extern "C" {
    pub fn sk_atmosphere_create(
        storage: *mut AtmosphereStorage,
        surface: *mut Surface,
        calculate_derivatives: ::std::os::raw::c_int,
    ) -> *mut Atmosphere;
}
unsafe extern "C" {
    pub fn sk_atmosphere_destroy(atmosphere: *mut Atmosphere);
}
unsafe extern "C" {
    pub fn sk_surface_create(
        nwavel: ::std::os::raw::c_int,
        nstokes: ::std::os::raw::c_int,
    ) -> *mut Surface;
}
unsafe extern "C" {
    pub fn sk_surface_destroy(config: *mut Surface);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ViewingGeometry {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn sk_viewing_geometry_create() -> *mut ViewingGeometry;
}
unsafe extern "C" {
    pub fn sk_viewing_geometry_destroy(geometry: *mut ViewingGeometry);
}
unsafe extern "C" {
    pub fn sk_viewing_geometry_add_ground_viewing_solar(
        geometry: *mut ViewingGeometry,
        cos_sza: f64,
        relative_azimuth_angle: f64,
        observeraltitude: f64,
        cos_viewing_zenith: f64,
    );
}
unsafe extern "C" {
    pub fn sk_viewing_geometry_num_rays(
        geometry: *mut ViewingGeometry,
        num_rays: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Config {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn sk_config_create() -> *mut Config;
}
unsafe extern "C" {
    pub fn sk_config_destroy(config: *mut Config);
}
unsafe extern "C" {
    pub fn sk_config_get_num_stokes(
        config: *mut Config,
        num_stokes: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OutputC {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn sk_output_create(radiance: *mut f64, nrad: ::std::os::raw::c_int) -> *mut OutputC;
}
unsafe extern "C" {
    pub fn sk_output_destroy(config: *mut OutputC);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Engine {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn sk_engine_create(
        engine: *mut Config,
        geometry: *mut Geometry1D,
        viewing_geometry: *mut ViewingGeometry,
    ) -> *mut Engine;
}
unsafe extern "C" {
    pub fn sk_engine_calculate_radiance(
        engine: *mut Engine,
        atmosphere: *mut Atmosphere,
        output: *mut OutputC,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn sk_engine_destroy(engine: *mut Engine);
}
